
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module sbc6502(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	input  		     RXD,
	output           TXD
);

    localparam SYSCLK_MHZ = 50;
	 localparam BAUD_RATE = 115200;
	 localparam EXACT_TIMING = 1;

//=======================================================
//  REG/WIRE declarations
//=======================================================


    wire[15:0]  ADDR_BUS;        
    wire[7:0]   DATA_BUS; 

	 wire[7:0] IB;
	 wire[7:0] QB;
	 
	 wire cold_reset = SW[0];
	 wire warm_reset = SW[1];

	 
	 
//=======================================================
//  Structural coding
//=======================================================
    function [7:0] sseg(input[3:0] hex);
    begin
        case(hex)
            4'h0: sseg[7:0] = 8'b0111111;
            4'h1: sseg[7:0] = 8'b0000110;
            4'h2: sseg[7:0] = 8'b1011011;
            4'h3: sseg[7:0] = 8'b1001111;
            4'h4: sseg[7:0] = 8'b1100110;
            4'h5: sseg[7:0] = 8'b1101101;
            4'h6: sseg[7:0] = 8'b1111101;
            4'h7: sseg[7:0] = 8'b0000111;
            4'h8: sseg[7:0] = 8'b1111111;
            4'h9: sseg[7:0] = 8'b1101111;
            4'hA: sseg[7:0] = 8'b1110111;
            4'hB: sseg[7:0] = 8'b1111100;
            4'hC: sseg[7:0] = 8'b0111001;
            4'hD: sseg[7:0] = 8'b1011110;
            4'hE: sseg[7:0] = 8'b1111001;
            default: 
                  sseg[7:0] = 8'b1110001; // 4'hF
        endcase
    end
    endfunction



    SBC6502 #(
        .SYSCLK_MHZ(SYSCLK_MHZ),
        .BAUD_RATE(BAUD_RATE),
        .EXACT_TIMING(EXACT_TIMING)
    )
    CPUBOARD(
        // Control
        .CLK(MAX10_CLK1_50),
        .COLD_RESET_(cold_reset),
        .WARM_RESET_(warm_reset),
        // Debug
        .ADDR_BUS(ADDR_BUS),
        .DATA_BUS(DATA_BUS), 
        // SD-Card
`ifdef SD_OPTION
        .sdclk (sdclk),
        .sdcmd (sdcmd),
        .sddat0(sddat0),   
        .sddat1(sddat1),
        .sddat2(sddat2),
        .sddat3(sddat3),
`endif
        // I/O
        .IB(IB),
        .QB(QB),
        // UART Interface 
        .RXD(RXD),
        .TXD(TXD),
        .RTS()                      // This shouldn't be needed
    );

	 
	 assign LEDR[9:0] = {1'b00, QB};
	 assign IB = SW[7:0];
	 
	 
endmodule
